apiVersion: v1
kind: Namespace
metadata:
  name: financial-portfolio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy: {}
  template:
    metadata:
      namespace: financial-portfolio
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: worker
    spec:
      containers:
        - command:
            - celery
            - -A
            - celery_worker
            - worker
            - -c
            - "2"
            - --loglevel=info
          env:
            - name: C_FORCE_ROOT
              value: "true"
          image: financial-app/backend:latest
          imagePullPolicy: Never
          name: worker
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy: {}
  template:
    metadata:
      namespace: financial-portfolio
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
    spec:
      containers:
        - image: financial-app/backend:latest
          name: backend
          imagePullPolicy: Never
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy: {}
  template:
    metadata:
      namespace: financial-portfolio
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env-postgres-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env-postgres-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env-postgres-env
          image: docker.io/postgres:13.1
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frontend
  strategy: {}
  template:
    metadata:
      namespace: financial-portfolio
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
    spec:
      containers:
        - image: financial-app/frontend
          imagePullPolicy: Never
          name: frontend
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbit
  name: rabbit
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbit
  strategy: {}
  template:
    metadata:
      namespace: financial-portfolio
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbit
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_PASS
                  name: env-rabbit-env
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_USER
                  name: env-rabbit-env
          image: rabbitmq:3.8.9
          name: rabbit
          ports:
            - containerPort: 5672
          resources: {}
      hostname: rabbit
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgres
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbit
  name: rabbit
spec:
  ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
  selector:
    io.kompose.service: rabbit
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: backend
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: financial-portfolio
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
  selector:
    io.kompose.service: frontend
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
data:
  POSTGRES_DB: finance
  POSTGRES_PASSWORD: p6wT9azspXLJYpKF
  POSTGRES_USER: postgres
kind: ConfigMap
metadata:
  namespace: financial-portfolio
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-env-postgres-env
  name: env-postgres-env
---
apiVersion: v1
data:
  RABBITMQ_DEFAULT_PASS: p6wT9azspXLJYpKF
  RABBITMQ_DEFAULT_USER: user
kind: ConfigMap
metadata:
  namespace: financial-portfolio
  creationTimestamp: null
  labels:
    io.kompose.service: rabbit-env-rabbit-env
  name: env-rabbit-env
